


# $DOTFILES {{{
# Resolve $SOURCE until the file is no longer a symlink
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
  current_dir="$( builtin cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  # if $SOURCE was a relative symlink, we need to resolve it relative to the
  # path where the symlink file was located
  [[ $SOURCE != /* ]] && SOURCE="$current_dir/$SOURCE"
done

current_dir="$( builtin cd -P "$( dirname "$SOURCE" )" && pwd )"
# df="$(dirname "$current_dir")" # When needing parent directory
DOTFILES="$current_dir"

export DOTFILES
unset current_dir
unset SOURCE
# }}}
# Source shell files {{{
# for f in $DOTFILES/.shell_config/*; do source $f; done
# source $DOTFILES/.shell_config/prompt
source $DOTFILES/.shell_config/zsh/prompt
# }}}



autoload -U compinit; compinit


# vim mode
bindkey -v
export KEYTIMEOUT=1

cursor_mode() {
    # See https://ttssh2.osdn.jp/manual/4/en/usage/tips/vim.html for cursor shapes
    cursor_block='\e[2 q'
    cursor_beam='\e[6 q'

    function zle-keymap-select {
        if [[ ${KEYMAP} == vicmd ]] ||
            [[ $1 = 'block' ]]; then
            echo -ne $cursor_block
        elif [[ ${KEYMAP} == main ]] ||
            [[ ${KEYMAP} == viins ]] ||
            [[ ${KEYMAP} = '' ]] ||
            [[ $1 = 'beam' ]]; then
            echo -ne $cursor_beam
        fi
    }

    zle-line-init() {
        echo -ne $cursor_beam
    }

    zle -N zle-keymap-select
    zle -N zle-line-init
}
cursor_mode


eval "$(starship init zsh)"




































































































# vim: fdm=marker:fdl=0 ai ts=2 sw=2 et sts=2 ft=sh
