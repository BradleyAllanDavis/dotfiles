# Used when nesting tmux sessions, sends prefix to inner tmux session
bind -n C-a send-prefix

# Reset all key bindings
unbind-key -a

# Theme {{{
set -g status "on"
set -g status-justify "left"
set -g status-style "bg=colour0"

set -g status-left-style "none"
set -g status-left-length "100"
set -g status-left "#[fg=colour14,bg=colour0,nobold,nounderscore,noitalics]"

setw -g window-status-activity-style "fg=colour14,bg=colour0"
setw -g window-status-separator ""
setw -g window-status-style "fg=colour10,bg=colour0"
setw -g window-status-format "#[fg=colour0,bg=colour0,nobold,nounderscore,noitalics] #[fg=colour11,bg=colour0]#W #[fg=colour0,bg=colour0,nobold,nounderscore,noitalics]  "
setw -g window-status-current-format "#[fg=colour0,bg=colour11,nobold,nounderscore,noitalics] #[fg=colour7,bg=colour11]#W #[fg=colour11,bg=colour0,nobold,nounderscore,noitalics]  "

set -g status-right-style "none"
set -g status-right-length "100"
set -g status-right "#[fg=colour14,bg=colour0,nobold,nounderscore,noitalics] #[fg=colour15,bg=colour14] #S "

set -g message-command-style "fg=colour7,bg=colour11"
set -g message-style "fg=colour7,bg=colour11"

set -g pane-active-border-style "fg=colour14"
set -g pane-border-style "fg=colour11"
# }}}

# Keybindings
# Session Managment {{{
# Reload tmux.conf
bind -n M-r source-file ~/.tmux.conf \; display "Tmux Configuration Reloaded"

# Suspend tmux session
bind -T prefix C-z suspend-client

# Detach
bind -n M-d detach-client
bind -T prefix d detach-client

# Pick which session
bind -n M-s choose-tree
bind -T prefix s choose-tree

# Rename session
bind -T prefix S command-prompt 'rename-session %%'
# }}}
# Window/Pane Management {{{
# Moves window left and right in order
bind -n M-Left swap-window -t -1
bind -n M-Right swap-window -t +1

# New window
bind -n M-n new-window -c '#{pane_current_path}'
bind n new-window -c '#{pane_current_path}'
bind N new-window \; command-prompt 'rename-window %%'

# Move between windows
bind -n M-i next-window
bind -n M-Tab next-window
bind i next-window
bind -n M-u previous-window
bind -n M-BSpace previous-window
# bind -n M-\ previous-window
bind u previous-window

# Rename window
bind -n M-, command-prompt 'rename-window %%'
bind , command-prompt 'rename-window %%'

# Split panes horizontally and vertically
bind -n M-h split-window -c "#{pane_current_path}"
bind h split-window -c "#{pane_current_path}"
bind -n M-v split-window -h -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# Close window
bind -n M-w confirm-before -p "kill-window #W? (y/n)" kill-window
bind w confirm-before -p "kill-window #W? (y/n)" kill-window

# Make pane fullscreen
bind -n M-z resize-pane -Z
bind -T prefix z resize-pane -Z

# Rotate windows within layout
bind -T prefix C-o rotate-window

# Cycle through layouts
bind -n M-Up previous-layout
bind -n M-Down next-layout
bind -T prefix Space next-layout
# }}}
# Pane Resizing {{{
bind -n S-Left resize-pane -L 3
bind -n S-Down resize-pane -D 2
bind -n S-Up resize-pane -U 2
bind -n S-Right resize-pane -R 3

# Remote pane resizing
bind -r -T prefix C-Left resize-pane -L 3
bind -r -T prefix C-Down resize-pane -D 2
bind -r -T prefix C-Up resize-pane -U 2
bind -r -T prefix C-Right resize-pane -R 3
# }}}
# Copy Mode {{{
# Get to copy mode (scroll) easier
bind C-v copy-mode
bind Up copy-mode -u
bind -n M-x copy-mode
bind -n M-c copy-mode

# Vim style visual selection
# bind -t vi-copy v begin-selection
bind -Tcopy-mode-vi 'v' send -X begin-selection

# Paste
bind p paste-buffer

# Yank
bind -T copy-mode-vi 'y' send-keys -X copy-pipe
# bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# }}}
# Misc {{{
# ?
bind -T prefix D choose-client

# List keybindings
bind -T prefix ? list-keys

# Enter tmux command mode
bind -T prefix : command-prompt
# }}}

# Other Configuration
# Mouse Settings {{{
set-option -g mouse on

# # Mouse bindings
# bind -T root MouseDown1Pane   select-pane -t = \; send-keys -M
# bind -T root MouseDown1Status select-window -t =

# # Make scrolling with wheels work
# bind -T root MouseDown3Pane   if-shell -F -t = "#{mouse_any_flag}" "select-pane -t=; send-keys -M" "select-pane -mt="
# bind -T root MouseDrag1Pane   if-shell -F -t = "#{mouse_any_flag}" "if -Ft= '#{pane_in_mode}' 'copy-mode -M' 'send-keys -M'" "copy-mode -M"
# bind -T root MouseDrag1Border resize-pane -M

# # Control speeds up scrolling
# bind -T root WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if-shell -Ft= '#{pane_in_mode}' 'send-keys 7 k' 'copy-mode -e'"
# bind -T root WheelDownPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if-shell -Ft= '#{pane_in_mode}' 'send-keys 7 j'"
# bind -T root C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
# # bind -t vi-copy C-WheelUpPane halfpage-up
# bind -Tcopy-mode-vi 'C-WheelUpPane' send -X halfpage-up
# # bind -t vi-copy C-WheelDownPane halfpage-down
# bind -Tcopy-mode-vi 'C-WheelDownPane' send -X halfpage-down

# # Fixes scrolling in vim
# bind -T root WheelUpStatus    previous-window
# bind -T root WheelDownStatus  next-window

# # Smart pane switching with awareness of Vim splits
# # Works with NERDTree and SSH
# IS_VIM="ps -o state= -o comm= -t '#{pane_tty}' \
#         | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|vim|tmux|ssh|moshn?vim?x?)(diff)?$'"
#         bind -n C-h if-shell "$IS_VIM" "send-keys C-h"  "select-pane -L"
#         bind -n C-j if-shell "$IS_VIM" "send-keys C-j"  "select-pane -D"
#         bind -n C-k if-shell "$IS_VIM" "send-keys C-k"  "select-pane -U"
#         bind -n C-l if-shell "$IS_VIM" "send-keys C-l"  "select-pane -R"
#         # bind -n C-\ if-shell "$IS_VIM" "send-keys C-\\" "select-pane -l"
# }}}
# General Configuration {{{
# Set default shell
set -g default-shell $SHELL

# Allows for CAPS/Ctrl hyper key
set -s escape-time 0

# Platform dependent configuration
# if-shell 'test "$(uname)" = "Darwin"' 'source-file ~/.tmux/mac.conf'
# if-shell 'test "$(uname)" = "Linux"' 'source-file ~/.tmux/linux.conf'

# SSH dependent configuration
# if-shell -F "$SSH_CONNECTION" "source-file ~/.tmux/remote.conf"

# Starting tmuxline snapshot
# source-file "~/.tmux/snapshot.conf"
# if-shell "test -f ~/.tmux/snapshot.conf" "source-file ~/.tmux/snapshot.conf"

# Term colors (xterm, screen256-color)
set -g default-terminal 'xterm-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
# set -ga terminal-overrides ",xterm-256color:Tc"

# Allow arrow keys
set-window-option -g xterm-keys on

# Fix rendering issue with vim?
# set-window-option -g utf8 on

# Set descriptive window title
set-option -g set-titles on

# Set position of tmux bar to top of screen
set-option -g status-position top

# Left justify windows on status bar
set -g status-justify left

# Enable utf-8
set -g status on

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Address vim mode switching delay
set -s escape-time 0

# Opt for audible bell
set-option -g bell-action any
# set-option -g visual-bell off

# Have tmux start at 1 for panes, not that I use pane numbers
set-option -g base-index 1
set-option -g pane-base-index 0
set-window-option -g pane-base-index 1

# Make sure to be as big a display as possible
setw -g aggressive-resize on

# Big history
set -g history-limit 10000000
set -g history-file ~/.tmux_history

# Highlight active window
# set-window-option -g window-status-current-bg red

# Visual notification of activity in other windows
setw -g monitor-activity off
set -g visual-activity off

# 12 Hour clock
set-window-option -g clock-mode-style 12

# Renumber windows after removing one
set -g renumber-windows on

# Tmux messages are displayed for ? seconds
set -g display-time 1000

# Refresh 'status-left' and 'status-right' every five seconds
set -g status-interval 60

# Focus events enabled for terminals that support them
set -g focus-events on
# }}}
# Plugin Configuration {{{
# Resurrect Plugin Configuration
set -g @resurrect-save 'C-s'
set -g @resurrect-restore 'C-r'
set -g @resurrect-save-bash-history 'on'
set -g @resurrect-capture-pane-contents 'on'

# Continuum Plugin Configuration
set -g @continuum-restore 'on'
set -g @continuum-save-interval '1'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'

# Bindings
bind-key -T prefix C-s run-shell 'tmux-resurrect save'
bind-key -T prefix C-r run-shell 'tmux-resurrect restore'
# }}}

# Linux
# bind -t vi-copy y copy-pipe "xclip -in -selection clipboard"
# bind -Tcopy-mode-vi 'y' send -X "xclip -in -selection clipboard"

# # Mac
# set -g default-command "reattach-to-user-namespace -l ${SHELL}"
# bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# bind -Tcopy-mode-vi 'y' send -X "reattach-to-user-namespace pbcopy"

# Remote
#bind -n C-h select-pane -L
#bind -n C-j select-pane -D
#bind -n C-k select-pane -U
#bind -n C-l select-pane -R
#bind -n C-\ select-pane -l































# vim:foldmethod=marker:foldlevel=0 tw=0
