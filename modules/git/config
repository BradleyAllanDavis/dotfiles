[user]
  user = BradleyDavis
	name = bradley.davis
  email = bradley.davis@okg.com

# 1Password SSH key
#[user]
#  signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIEv14EsZtwDm2BP94ci7/F3P+pxYLtYLGvYWFyVjg41
#[gpg]
#  format = ssh
#[gpg "ssh"]
#  program = "/opt/1Password/op-ssh-sign"
#[commit]
#  gpgsign = true

[core]
  ; editor = vim
  editor = nvim
  excludesfile = ~/.config/git/ignore
  preloadIndex = true
  fscache = true
  statusHints = true

[rerere]
  enabled = true

[pager]
  diff = "diff-so-fancy | less --tabs=4 -RFX"
  show = "diff-so-fancy | less --tabs=4 -RFX"

[push]
  default = current

[receive]
  denyNonFastforwards = false

[help]
  autocorrect = 1

[color]
  ui = always
  status = auto
  diff = auto
  branch = auto
  showbranch = auto

[color "status"]
  header = normal
  added = green
  deleted = red
  changed = yellow
  untracked = blue
  nobranch = magenta

[color "diff"]
  plain = normal
  meta = yellow bold
  frag = magenta bold                 # line info
  old = red                           # deletions
  new = green                         # additions
  commit = yellow
  whitespace = normal red

[color "branch"]
  plain = normal
  current = yellow reverse
  local = yellow
  remote = green

[alias]
  # Show all aliases
  als = !git config -l | grep alias | cut -c 7-

  # Creates a branch, commits any changes, swaps back to the branch you started on
  save = !sh -c 'export PREV=$(git symbolic-ref HEAD|cut -d/ -f3-) && git checkout -b "$1" && git commit -am "$1"

  # Undo last commit
  ulc = reset --soft HEAD~1

  # log
  log = log --graph
  l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  ls = log --stat --summary
  le = log --oneline --decorate
  tree = log --graph --decorate --pretty=oneline --abbrev-commit

  # add
  a = add
  all = add .

  # commit
  c = commit
  ca = commit -a

  # clone
  cl = clone

  # cherry-pick
  cp = cherry-pick

  # fetch
  f = fetch
  fo = fetch origin

  # checkout
  co = checkout
  cob = checkout -b
  com = checkout master

  # diff
  d = diff --staged
  dc = diff --staged
  ds = diff --staged
  dt = difftool
  difftool = difftool

  # branch
  br = branch
  ba = branch -a
  bv = branch -v
  bav = branch -av
  db = branch -D
  bd = branch -D
  bs = branch -a
  branches = branch -a

  # push
  p = push
  pu = push -u
  pom = push origin master

  # pull
  pr = pull --rebase

  # reset
  r = reset
  rh = reset --hard
  rs = reset --soft HEAD~1

  # stash
  s = stash
  ss = stash show -p
  sp = stash pop
  sd = stash drop

  # merge
  mt = mergetool

  rm = rm -f
  grep = grep -Ii

  rc = !$EDITOR ~/.config/git/config    # Edit git config

  ignored = check-ignore -v *

  today = "log --stat --since='1 Day Ago' --graph --pretty=oneline --abbrev-commit --date=relative"

  tags = tag -l

  remotes = remote -v

  # Switch to a branch, creating it if necessary
  go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

[diff]
  tool = vimdiff

[difftool]
  prompt = false

[merge]
	tool = vimdiff

[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  required = true
  process = git-lfs filter-process

[gc]
  auto = 256

# Rewrites of repo paths
[url "git@github.com:"]
  insteadOf = "https://github.com/"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
  pushInsteadOf = "https://github.com/"

[url "git://github.com/"]
  insteadOf = "github:"

[url "git@gist.github.com:"]
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
  insteadOf = "gist:"

[hub]
  host = github.intuit.com

[init]
  defaultBranch = main

[mergetool]
	keepBackup = true

# vim: sw=2:ts=2:et
